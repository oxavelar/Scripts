#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

sleep 10s

# Enable eth0 jumbo frames
ifconfig eth0 mtu 9000 txqueuelen 1000 up

# Simple scheduler for the SSD
echo deadline > /sys/block/sda/queue/scheduler

# IO Tweaking
for i in $(ls -d /sys/block/sd?);
do
  echo  256 > $i/queue/nr_requests
  echo 3072 > $i/queue/read_ahead_kb
  echo    0 > $i/queue/iostats
done

# Enabling Kernel Same-page Sharing
echo 4096 > /sys/kernel/mm/ksm/pages_to_scan
echo 1000 > /sys/kernel/mm/ksm/sleep_millisecs
echo    1 > /sys/kernel/mm/ksm/run

# Enabling Transparent Hugepage Support
echo always > /sys/kernel/mm/transparent_hugepage/enabled

# Using zRAM now, this machine has a powerful CPU
MEM_SIZE_KB=$(awk '/MemTotal/{print $2}' /proc/meminfo)
ZRAM_FACTOR=100
CPU_NUM=$(grep -c processor /proc/cpuinfo)

modprobe zram num_devices=$CPU_NUM
for i in $(seq 0 $((CPU_NUM - 1)));
do
  echo $((MEM_SIZE_KB * 1024 / CPU_NUM * ZRAM_FACTOR / 100)) > /sys/block/zram$i/disksize
  mkswap /dev/zram$i
  swapon -p 5 /dev/zram$i
done

exit 0
