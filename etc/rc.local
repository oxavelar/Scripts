#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# CPU Governor change
cpufreq-set -g schedutil

# Enabling Kernel Same-page Sharing
echo 2048 > /sys/kernel/mm/ksm/pages_to_scan
echo 8000 > /sys/kernel/mm/ksm/sleep_millisecs
echo    1 > /sys/kernel/mm/ksm/run

# Enabling Transparent Hugepage Support
echo always > /sys/kernel/mm/transparent_hugepage/enabled

if modprobe zram
then
  # Using 20% as zRAM now, this machine has a powerful CPU
  ZRAM_FACTOR=20
  MEM_SIZE_KB=$(awk '/MemTotal/{print $2}' /proc/meminfo)
  
  echo $((ZRAM_FACTOR * MEM_SIZE_KB * 1024 / 100)) > /sys/block/zram0/disksize
  mkswap /dev/zram0
  swapon -p 5 /dev/zram0
fi

# Custom power management settings from PowerTop
echo 0 > /proc/sys/kernel/nmi_watchdog
echo auto | tee /sys/bus/i2c/devices/i2c-*/device/power/control
echo auto | tee /sys/bus/pci/devices/*/power/control
echo auto | tee /sys/bus/usb/devices/usb*/power/control
echo min_power | tee /sys/class/scsi_host/*/link_power_management_policy

# Custom devices for this computer
echo 1 > /sys/module/snd_hda_intel/parameters/power_save
echo auto > /sys/bus/usb/devices/1-5/power/control # USB-SATA-U3
echo auto > /sys/bus/usb/devices/3-5/power/control 
echo auto > /sys/bus/usb/devices/4-1/power/control # USB Keyboard

echo 1500 > /proc/sys/vm/dirty_writeback_centisecs

# Enable PCIe MMRBC to 4k reads to our network controller
NET_BDF=$(grep r8169 /proc/bus/pci/devices | cut -c1-4)
NET_BUS=$(echo $NET_BDF | cut -c1-2)
NET_DEV=$(echo $NET_BDF | cut -c3-4)
setpci -v -s ${NET_BUS}:${NET_DEV} e6.b=2e

# Jumbo frames enabled
ifconfig eth0 mtu 9000

# Wake-on-lan status
ethtool -s eth0 wol 

echo "rc.local completed"

exit 0

