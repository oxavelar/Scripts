#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

sleep 10s

# Enable PCIe MMRBC to 4k reads to our network controller
NET_BDF=$(grep r8169 /proc/bus/pci/devices | cut -c1-4)
NET_BUS=$(echo $NET_BDF | cut -c1-2)
NET_DEV=$(echo $NET_BDF | cut -c3-4)
setpci -v -s ${NET_BUS}:${NET_DEV} e6.b=2e

# Enabling Kernel Same-page Sharing
echo 128 > /sys/kernel/mm/ksm/pages_to_scan
echo 100 > /sys/kernel/mm/ksm/sleep_millisecs
echo   1 > /sys/kernel/mm/ksm/run

# Enabling Transparent Hugepage Support
echo always > /sys/kernel/mm/transparent_hugepage/enabled

exit 0

# Using 50% as zRAM now, this machine has a powerful CPU
ZRAM_FACTOR=50
MEM_SIZE_KB=$(awk '/MemTotal/{print $2}' /proc/meminfo)
CPU_NUM=$(grep -c processor /proc/cpuinfo)

modprobe zram num_devices=$CPU_NUM
for i in $(seq 0 $((CPU_NUM - 1)));
do
  echo $((ZRAM_FACTOR * MEM_SIZE_KB * 1024 / CPU_NUM / 100)) > /sys/block/zram$i/disksize
  mkswap /dev/zram$i
  swapon -p 5 /dev/zram$i
done

exit 0
